// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: Protocol/GameMessage.proto
// Protobuf C++ Version: 5.29.3

#ifndef Protocol_2fGameMessage_2eproto_2epb_2eh
#define Protocol_2fGameMessage_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_Protocol_2fGameMessage_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_Protocol_2fGameMessage_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_Protocol_2fGameMessage_2eproto;
namespace juncore {
namespace protocol {
class ChatMessage;
struct ChatMessageDefaultTypeInternal;
extern ChatMessageDefaultTypeInternal _ChatMessage_default_instance_;
class GamePacket;
struct GamePacketDefaultTypeInternal;
extern GamePacketDefaultTypeInternal _GamePacket_default_instance_;
class LoginRequest;
struct LoginRequestDefaultTypeInternal;
extern LoginRequestDefaultTypeInternal _LoginRequest_default_instance_;
class LoginResponse;
struct LoginResponseDefaultTypeInternal;
extern LoginResponseDefaultTypeInternal _LoginResponse_default_instance_;
class PacketHeader;
struct PacketHeaderDefaultTypeInternal;
extern PacketHeaderDefaultTypeInternal _PacketHeader_default_instance_;
class PlayerMove;
struct PlayerMoveDefaultTypeInternal;
extern PlayerMoveDefaultTypeInternal _PlayerMove_default_instance_;
class PlayerPosition;
struct PlayerPositionDefaultTypeInternal;
extern PlayerPositionDefaultTypeInternal _PlayerPosition_default_instance_;
}  // namespace protocol
}  // namespace juncore
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace juncore {
namespace protocol {
enum MessageType : int {
  UNKNOWN = 0,
  LOGIN_REQUEST = 1,
  LOGIN_RESPONSE = 2,
  CHAT_MESSAGE = 3,
  PLAYER_MOVE = 4,
  PLAYER_POSITION = 5,
  PING = 6,
  PONG = 7,
  MessageType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  MessageType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool MessageType_IsValid(int value);
extern const uint32_t MessageType_internal_data_[];
constexpr MessageType MessageType_MIN = static_cast<MessageType>(0);
constexpr MessageType MessageType_MAX = static_cast<MessageType>(7);
constexpr int MessageType_ARRAYSIZE = 7 + 1;
const ::google::protobuf::EnumDescriptor*
MessageType_descriptor();
template <typename T>
const std::string& MessageType_Name(T value) {
  static_assert(std::is_same<T, MessageType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to MessageType_Name().");
  return MessageType_Name(static_cast<MessageType>(value));
}
template <>
inline const std::string& MessageType_Name(MessageType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<MessageType_descriptor,
                                                 0, 7>(
      static_cast<int>(value));
}
inline bool MessageType_Parse(absl::string_view name, MessageType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MessageType>(
      MessageType_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class PlayerPosition final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:juncore.protocol.PlayerPosition) */ {
 public:
  inline PlayerPosition() : PlayerPosition(nullptr) {}
  ~PlayerPosition() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PlayerPosition* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PlayerPosition));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PlayerPosition(
      ::google::protobuf::internal::ConstantInitialized);

  inline PlayerPosition(const PlayerPosition& from) : PlayerPosition(nullptr, from) {}
  inline PlayerPosition(PlayerPosition&& from) noexcept
      : PlayerPosition(nullptr, std::move(from)) {}
  inline PlayerPosition& operator=(const PlayerPosition& from) {
    CopyFrom(from);
    return *this;
  }
  inline PlayerPosition& operator=(PlayerPosition&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PlayerPosition& default_instance() {
    return *internal_default_instance();
  }
  static inline const PlayerPosition* internal_default_instance() {
    return reinterpret_cast<const PlayerPosition*>(
        &_PlayerPosition_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(PlayerPosition& a, PlayerPosition& b) { a.Swap(&b); }
  inline void Swap(PlayerPosition* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PlayerPosition* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PlayerPosition* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PlayerPosition>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PlayerPosition& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PlayerPosition& from) { PlayerPosition::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PlayerPosition* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "juncore.protocol.PlayerPosition"; }

 protected:
  explicit PlayerPosition(::google::protobuf::Arena* arena);
  PlayerPosition(::google::protobuf::Arena* arena, const PlayerPosition& from);
  PlayerPosition(::google::protobuf::Arena* arena, PlayerPosition&& from) noexcept
      : PlayerPosition(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPlayerIdFieldNumber = 1,
    kXFieldNumber = 2,
    kYFieldNumber = 3,
    kZFieldNumber = 4,
    kTimestampFieldNumber = 6,
    kRotationFieldNumber = 5,
  };
  // int32 player_id = 1;
  void clear_player_id() ;
  ::int32_t player_id() const;
  void set_player_id(::int32_t value);

  private:
  ::int32_t _internal_player_id() const;
  void _internal_set_player_id(::int32_t value);

  public:
  // float x = 2;
  void clear_x() ;
  float x() const;
  void set_x(float value);

  private:
  float _internal_x() const;
  void _internal_set_x(float value);

  public:
  // float y = 3;
  void clear_y() ;
  float y() const;
  void set_y(float value);

  private:
  float _internal_y() const;
  void _internal_set_y(float value);

  public:
  // float z = 4;
  void clear_z() ;
  float z() const;
  void set_z(float value);

  private:
  float _internal_z() const;
  void _internal_set_z(float value);

  public:
  // int64 timestamp = 6;
  void clear_timestamp() ;
  ::int64_t timestamp() const;
  void set_timestamp(::int64_t value);

  private:
  ::int64_t _internal_timestamp() const;
  void _internal_set_timestamp(::int64_t value);

  public:
  // float rotation = 5;
  void clear_rotation() ;
  float rotation() const;
  void set_rotation(float value);

  private:
  float _internal_rotation() const;
  void _internal_set_rotation(float value);

  public:
  // @@protoc_insertion_point(class_scope:juncore.protocol.PlayerPosition)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PlayerPosition& from_msg);
    ::int32_t player_id_;
    float x_;
    float y_;
    float z_;
    ::int64_t timestamp_;
    float rotation_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Protocol_2fGameMessage_2eproto;
};
// -------------------------------------------------------------------

class PlayerMove final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:juncore.protocol.PlayerMove) */ {
 public:
  inline PlayerMove() : PlayerMove(nullptr) {}
  ~PlayerMove() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PlayerMove* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PlayerMove));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PlayerMove(
      ::google::protobuf::internal::ConstantInitialized);

  inline PlayerMove(const PlayerMove& from) : PlayerMove(nullptr, from) {}
  inline PlayerMove(PlayerMove&& from) noexcept
      : PlayerMove(nullptr, std::move(from)) {}
  inline PlayerMove& operator=(const PlayerMove& from) {
    CopyFrom(from);
    return *this;
  }
  inline PlayerMove& operator=(PlayerMove&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PlayerMove& default_instance() {
    return *internal_default_instance();
  }
  static inline const PlayerMove* internal_default_instance() {
    return reinterpret_cast<const PlayerMove*>(
        &_PlayerMove_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(PlayerMove& a, PlayerMove& b) { a.Swap(&b); }
  inline void Swap(PlayerMove* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PlayerMove* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PlayerMove* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PlayerMove>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PlayerMove& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PlayerMove& from) { PlayerMove::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PlayerMove* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "juncore.protocol.PlayerMove"; }

 protected:
  explicit PlayerMove(::google::protobuf::Arena* arena);
  PlayerMove(::google::protobuf::Arena* arena, const PlayerMove& from);
  PlayerMove(::google::protobuf::Arena* arena, PlayerMove&& from) noexcept
      : PlayerMove(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPlayerIdFieldNumber = 1,
    kXFieldNumber = 2,
    kYFieldNumber = 3,
    kZFieldNumber = 4,
    kRotationFieldNumber = 5,
  };
  // int32 player_id = 1;
  void clear_player_id() ;
  ::int32_t player_id() const;
  void set_player_id(::int32_t value);

  private:
  ::int32_t _internal_player_id() const;
  void _internal_set_player_id(::int32_t value);

  public:
  // float x = 2;
  void clear_x() ;
  float x() const;
  void set_x(float value);

  private:
  float _internal_x() const;
  void _internal_set_x(float value);

  public:
  // float y = 3;
  void clear_y() ;
  float y() const;
  void set_y(float value);

  private:
  float _internal_y() const;
  void _internal_set_y(float value);

  public:
  // float z = 4;
  void clear_z() ;
  float z() const;
  void set_z(float value);

  private:
  float _internal_z() const;
  void _internal_set_z(float value);

  public:
  // float rotation = 5;
  void clear_rotation() ;
  float rotation() const;
  void set_rotation(float value);

  private:
  float _internal_rotation() const;
  void _internal_set_rotation(float value);

  public:
  // @@protoc_insertion_point(class_scope:juncore.protocol.PlayerMove)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PlayerMove& from_msg);
    ::int32_t player_id_;
    float x_;
    float y_;
    float z_;
    float rotation_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Protocol_2fGameMessage_2eproto;
};
// -------------------------------------------------------------------

class PacketHeader final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:juncore.protocol.PacketHeader) */ {
 public:
  inline PacketHeader() : PacketHeader(nullptr) {}
  ~PacketHeader() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PacketHeader* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PacketHeader));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PacketHeader(
      ::google::protobuf::internal::ConstantInitialized);

  inline PacketHeader(const PacketHeader& from) : PacketHeader(nullptr, from) {}
  inline PacketHeader(PacketHeader&& from) noexcept
      : PacketHeader(nullptr, std::move(from)) {}
  inline PacketHeader& operator=(const PacketHeader& from) {
    CopyFrom(from);
    return *this;
  }
  inline PacketHeader& operator=(PacketHeader&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PacketHeader& default_instance() {
    return *internal_default_instance();
  }
  static inline const PacketHeader* internal_default_instance() {
    return reinterpret_cast<const PacketHeader*>(
        &_PacketHeader_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(PacketHeader& a, PacketHeader& b) { a.Swap(&b); }
  inline void Swap(PacketHeader* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PacketHeader* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PacketHeader* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PacketHeader>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PacketHeader& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PacketHeader& from) { PacketHeader::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PacketHeader* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "juncore.protocol.PacketHeader"; }

 protected:
  explicit PacketHeader(::google::protobuf::Arena* arena);
  PacketHeader(::google::protobuf::Arena* arena, const PacketHeader& from);
  PacketHeader(::google::protobuf::Arena* arena, PacketHeader&& from) noexcept
      : PacketHeader(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTypeFieldNumber = 1,
    kSizeFieldNumber = 2,
    kTimestampFieldNumber = 3,
  };
  // .juncore.protocol.MessageType type = 1;
  void clear_type() ;
  ::juncore::protocol::MessageType type() const;
  void set_type(::juncore::protocol::MessageType value);

  private:
  ::juncore::protocol::MessageType _internal_type() const;
  void _internal_set_type(::juncore::protocol::MessageType value);

  public:
  // int32 size = 2;
  void clear_size() ;
  ::int32_t size() const;
  void set_size(::int32_t value);

  private:
  ::int32_t _internal_size() const;
  void _internal_set_size(::int32_t value);

  public:
  // int64 timestamp = 3;
  void clear_timestamp() ;
  ::int64_t timestamp() const;
  void set_timestamp(::int64_t value);

  private:
  ::int64_t _internal_timestamp() const;
  void _internal_set_timestamp(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:juncore.protocol.PacketHeader)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PacketHeader& from_msg);
    int type_;
    ::int32_t size_;
    ::int64_t timestamp_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Protocol_2fGameMessage_2eproto;
};
// -------------------------------------------------------------------

class LoginResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:juncore.protocol.LoginResponse) */ {
 public:
  inline LoginResponse() : LoginResponse(nullptr) {}
  ~LoginResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LoginResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LoginResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LoginResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline LoginResponse(const LoginResponse& from) : LoginResponse(nullptr, from) {}
  inline LoginResponse(LoginResponse&& from) noexcept
      : LoginResponse(nullptr, std::move(from)) {}
  inline LoginResponse& operator=(const LoginResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline LoginResponse& operator=(LoginResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LoginResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const LoginResponse* internal_default_instance() {
    return reinterpret_cast<const LoginResponse*>(
        &_LoginResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(LoginResponse& a, LoginResponse& b) { a.Swap(&b); }
  inline void Swap(LoginResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LoginResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LoginResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<LoginResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LoginResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LoginResponse& from) { LoginResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(LoginResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "juncore.protocol.LoginResponse"; }

 protected:
  explicit LoginResponse(::google::protobuf::Arena* arena);
  LoginResponse(::google::protobuf::Arena* arena, const LoginResponse& from);
  LoginResponse(::google::protobuf::Arena* arena, LoginResponse&& from) noexcept
      : LoginResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessageFieldNumber = 2,
    kSuccessFieldNumber = 1,
    kPlayerIdFieldNumber = 3,
  };
  // string message = 2;
  void clear_message() ;
  const std::string& message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* value);

  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(
      const std::string& value);
  std::string* _internal_mutable_message();

  public:
  // bool success = 1;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // int32 player_id = 3;
  void clear_player_id() ;
  ::int32_t player_id() const;
  void set_player_id(::int32_t value);

  private:
  ::int32_t _internal_player_id() const;
  void _internal_set_player_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:juncore.protocol.LoginResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      46, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const LoginResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr message_;
    bool success_;
    ::int32_t player_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Protocol_2fGameMessage_2eproto;
};
// -------------------------------------------------------------------

class LoginRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:juncore.protocol.LoginRequest) */ {
 public:
  inline LoginRequest() : LoginRequest(nullptr) {}
  ~LoginRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LoginRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LoginRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LoginRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline LoginRequest(const LoginRequest& from) : LoginRequest(nullptr, from) {}
  inline LoginRequest(LoginRequest&& from) noexcept
      : LoginRequest(nullptr, std::move(from)) {}
  inline LoginRequest& operator=(const LoginRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline LoginRequest& operator=(LoginRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LoginRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const LoginRequest* internal_default_instance() {
    return reinterpret_cast<const LoginRequest*>(
        &_LoginRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(LoginRequest& a, LoginRequest& b) { a.Swap(&b); }
  inline void Swap(LoginRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LoginRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LoginRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<LoginRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LoginRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LoginRequest& from) { LoginRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(LoginRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "juncore.protocol.LoginRequest"; }

 protected:
  explicit LoginRequest(::google::protobuf::Arena* arena);
  LoginRequest(::google::protobuf::Arena* arena, const LoginRequest& from);
  LoginRequest(::google::protobuf::Arena* arena, LoginRequest&& from) noexcept
      : LoginRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUsernameFieldNumber = 1,
    kPasswordFieldNumber = 2,
    kVersionFieldNumber = 3,
  };
  // string username = 1;
  void clear_username() ;
  const std::string& username() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_username(Arg_&& arg, Args_... args);
  std::string* mutable_username();
  PROTOBUF_NODISCARD std::string* release_username();
  void set_allocated_username(std::string* value);

  private:
  const std::string& _internal_username() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_username(
      const std::string& value);
  std::string* _internal_mutable_username();

  public:
  // string password = 2;
  void clear_password() ;
  const std::string& password() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_password(Arg_&& arg, Args_... args);
  std::string* mutable_password();
  PROTOBUF_NODISCARD std::string* release_password();
  void set_allocated_password(std::string* value);

  private:
  const std::string& _internal_password() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_password(
      const std::string& value);
  std::string* _internal_mutable_password();

  public:
  // string version = 3;
  void clear_version() ;
  const std::string& version() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_version(Arg_&& arg, Args_... args);
  std::string* mutable_version();
  PROTOBUF_NODISCARD std::string* release_version();
  void set_allocated_version(std::string* value);

  private:
  const std::string& _internal_version() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_version(
      const std::string& value);
  std::string* _internal_mutable_version();

  public:
  // @@protoc_insertion_point(class_scope:juncore.protocol.LoginRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      61, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const LoginRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr username_;
    ::google::protobuf::internal::ArenaStringPtr password_;
    ::google::protobuf::internal::ArenaStringPtr version_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Protocol_2fGameMessage_2eproto;
};
// -------------------------------------------------------------------

class ChatMessage final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:juncore.protocol.ChatMessage) */ {
 public:
  inline ChatMessage() : ChatMessage(nullptr) {}
  ~ChatMessage() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ChatMessage* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ChatMessage));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ChatMessage(
      ::google::protobuf::internal::ConstantInitialized);

  inline ChatMessage(const ChatMessage& from) : ChatMessage(nullptr, from) {}
  inline ChatMessage(ChatMessage&& from) noexcept
      : ChatMessage(nullptr, std::move(from)) {}
  inline ChatMessage& operator=(const ChatMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline ChatMessage& operator=(ChatMessage&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ChatMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const ChatMessage* internal_default_instance() {
    return reinterpret_cast<const ChatMessage*>(
        &_ChatMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(ChatMessage& a, ChatMessage& b) { a.Swap(&b); }
  inline void Swap(ChatMessage* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ChatMessage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ChatMessage* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ChatMessage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ChatMessage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ChatMessage& from) { ChatMessage::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ChatMessage* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "juncore.protocol.ChatMessage"; }

 protected:
  explicit ChatMessage(::google::protobuf::Arena* arena);
  ChatMessage(::google::protobuf::Arena* arena, const ChatMessage& from);
  ChatMessage(::google::protobuf::Arena* arena, ChatMessage&& from) noexcept
      : ChatMessage(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessageFieldNumber = 2,
    kTimestampFieldNumber = 3,
    kPlayerIdFieldNumber = 1,
  };
  // string message = 2;
  void clear_message() ;
  const std::string& message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* value);

  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(
      const std::string& value);
  std::string* _internal_mutable_message();

  public:
  // int64 timestamp = 3;
  void clear_timestamp() ;
  ::int64_t timestamp() const;
  void set_timestamp(::int64_t value);

  private:
  ::int64_t _internal_timestamp() const;
  void _internal_set_timestamp(::int64_t value);

  public:
  // int32 player_id = 1;
  void clear_player_id() ;
  ::int32_t player_id() const;
  void set_player_id(::int32_t value);

  private:
  ::int32_t _internal_player_id() const;
  void _internal_set_player_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:juncore.protocol.ChatMessage)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      44, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ChatMessage& from_msg);
    ::google::protobuf::internal::ArenaStringPtr message_;
    ::int64_t timestamp_;
    ::int32_t player_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Protocol_2fGameMessage_2eproto;
};
// -------------------------------------------------------------------

class GamePacket final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:juncore.protocol.GamePacket) */ {
 public:
  inline GamePacket() : GamePacket(nullptr) {}
  ~GamePacket() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GamePacket* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GamePacket));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GamePacket(
      ::google::protobuf::internal::ConstantInitialized);

  inline GamePacket(const GamePacket& from) : GamePacket(nullptr, from) {}
  inline GamePacket(GamePacket&& from) noexcept
      : GamePacket(nullptr, std::move(from)) {}
  inline GamePacket& operator=(const GamePacket& from) {
    CopyFrom(from);
    return *this;
  }
  inline GamePacket& operator=(GamePacket&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GamePacket& default_instance() {
    return *internal_default_instance();
  }
  enum PayloadCase {
    kLoginRequest = 2,
    kLoginResponse = 3,
    kChatMessage = 4,
    kPlayerMove = 5,
    kPlayerPosition = 6,
    PAYLOAD_NOT_SET = 0,
  };
  static inline const GamePacket* internal_default_instance() {
    return reinterpret_cast<const GamePacket*>(
        &_GamePacket_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(GamePacket& a, GamePacket& b) { a.Swap(&b); }
  inline void Swap(GamePacket* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GamePacket* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GamePacket* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GamePacket>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GamePacket& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GamePacket& from) { GamePacket::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GamePacket* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "juncore.protocol.GamePacket"; }

 protected:
  explicit GamePacket(::google::protobuf::Arena* arena);
  GamePacket(::google::protobuf::Arena* arena, const GamePacket& from);
  GamePacket(::google::protobuf::Arena* arena, GamePacket&& from) noexcept
      : GamePacket(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHeaderFieldNumber = 1,
    kLoginRequestFieldNumber = 2,
    kLoginResponseFieldNumber = 3,
    kChatMessageFieldNumber = 4,
    kPlayerMoveFieldNumber = 5,
    kPlayerPositionFieldNumber = 6,
  };
  // .juncore.protocol.PacketHeader header = 1;
  bool has_header() const;
  void clear_header() ;
  const ::juncore::protocol::PacketHeader& header() const;
  PROTOBUF_NODISCARD ::juncore::protocol::PacketHeader* release_header();
  ::juncore::protocol::PacketHeader* mutable_header();
  void set_allocated_header(::juncore::protocol::PacketHeader* value);
  void unsafe_arena_set_allocated_header(::juncore::protocol::PacketHeader* value);
  ::juncore::protocol::PacketHeader* unsafe_arena_release_header();

  private:
  const ::juncore::protocol::PacketHeader& _internal_header() const;
  ::juncore::protocol::PacketHeader* _internal_mutable_header();

  public:
  // .juncore.protocol.LoginRequest login_request = 2;
  bool has_login_request() const;
  private:
  bool _internal_has_login_request() const;

  public:
  void clear_login_request() ;
  const ::juncore::protocol::LoginRequest& login_request() const;
  PROTOBUF_NODISCARD ::juncore::protocol::LoginRequest* release_login_request();
  ::juncore::protocol::LoginRequest* mutable_login_request();
  void set_allocated_login_request(::juncore::protocol::LoginRequest* value);
  void unsafe_arena_set_allocated_login_request(::juncore::protocol::LoginRequest* value);
  ::juncore::protocol::LoginRequest* unsafe_arena_release_login_request();

  private:
  const ::juncore::protocol::LoginRequest& _internal_login_request() const;
  ::juncore::protocol::LoginRequest* _internal_mutable_login_request();

  public:
  // .juncore.protocol.LoginResponse login_response = 3;
  bool has_login_response() const;
  private:
  bool _internal_has_login_response() const;

  public:
  void clear_login_response() ;
  const ::juncore::protocol::LoginResponse& login_response() const;
  PROTOBUF_NODISCARD ::juncore::protocol::LoginResponse* release_login_response();
  ::juncore::protocol::LoginResponse* mutable_login_response();
  void set_allocated_login_response(::juncore::protocol::LoginResponse* value);
  void unsafe_arena_set_allocated_login_response(::juncore::protocol::LoginResponse* value);
  ::juncore::protocol::LoginResponse* unsafe_arena_release_login_response();

  private:
  const ::juncore::protocol::LoginResponse& _internal_login_response() const;
  ::juncore::protocol::LoginResponse* _internal_mutable_login_response();

  public:
  // .juncore.protocol.ChatMessage chat_message = 4;
  bool has_chat_message() const;
  private:
  bool _internal_has_chat_message() const;

  public:
  void clear_chat_message() ;
  const ::juncore::protocol::ChatMessage& chat_message() const;
  PROTOBUF_NODISCARD ::juncore::protocol::ChatMessage* release_chat_message();
  ::juncore::protocol::ChatMessage* mutable_chat_message();
  void set_allocated_chat_message(::juncore::protocol::ChatMessage* value);
  void unsafe_arena_set_allocated_chat_message(::juncore::protocol::ChatMessage* value);
  ::juncore::protocol::ChatMessage* unsafe_arena_release_chat_message();

  private:
  const ::juncore::protocol::ChatMessage& _internal_chat_message() const;
  ::juncore::protocol::ChatMessage* _internal_mutable_chat_message();

  public:
  // .juncore.protocol.PlayerMove player_move = 5;
  bool has_player_move() const;
  private:
  bool _internal_has_player_move() const;

  public:
  void clear_player_move() ;
  const ::juncore::protocol::PlayerMove& player_move() const;
  PROTOBUF_NODISCARD ::juncore::protocol::PlayerMove* release_player_move();
  ::juncore::protocol::PlayerMove* mutable_player_move();
  void set_allocated_player_move(::juncore::protocol::PlayerMove* value);
  void unsafe_arena_set_allocated_player_move(::juncore::protocol::PlayerMove* value);
  ::juncore::protocol::PlayerMove* unsafe_arena_release_player_move();

  private:
  const ::juncore::protocol::PlayerMove& _internal_player_move() const;
  ::juncore::protocol::PlayerMove* _internal_mutable_player_move();

  public:
  // .juncore.protocol.PlayerPosition player_position = 6;
  bool has_player_position() const;
  private:
  bool _internal_has_player_position() const;

  public:
  void clear_player_position() ;
  const ::juncore::protocol::PlayerPosition& player_position() const;
  PROTOBUF_NODISCARD ::juncore::protocol::PlayerPosition* release_player_position();
  ::juncore::protocol::PlayerPosition* mutable_player_position();
  void set_allocated_player_position(::juncore::protocol::PlayerPosition* value);
  void unsafe_arena_set_allocated_player_position(::juncore::protocol::PlayerPosition* value);
  ::juncore::protocol::PlayerPosition* unsafe_arena_release_player_position();

  private:
  const ::juncore::protocol::PlayerPosition& _internal_player_position() const;
  ::juncore::protocol::PlayerPosition* _internal_mutable_player_position();

  public:
  void clear_payload();
  PayloadCase payload_case() const;
  // @@protoc_insertion_point(class_scope:juncore.protocol.GamePacket)
 private:
  class _Internal;
  void set_has_login_request();
  void set_has_login_response();
  void set_has_chat_message();
  void set_has_player_move();
  void set_has_player_position();
  inline bool has_payload() const;
  inline void clear_has_payload();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 6, 6,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GamePacket& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::juncore::protocol::PacketHeader* header_;
    union PayloadUnion {
      constexpr PayloadUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::juncore::protocol::LoginRequest* login_request_;
      ::juncore::protocol::LoginResponse* login_response_;
      ::juncore::protocol::ChatMessage* chat_message_;
      ::juncore::protocol::PlayerMove* player_move_;
      ::juncore::protocol::PlayerPosition* player_position_;
    } payload_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Protocol_2fGameMessage_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// LoginRequest

// string username = 1;
inline void LoginRequest::clear_username() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.username_.ClearToEmpty();
}
inline const std::string& LoginRequest::username() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:juncore.protocol.LoginRequest.username)
  return _internal_username();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LoginRequest::set_username(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.username_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:juncore.protocol.LoginRequest.username)
}
inline std::string* LoginRequest::mutable_username() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_username();
  // @@protoc_insertion_point(field_mutable:juncore.protocol.LoginRequest.username)
  return _s;
}
inline const std::string& LoginRequest::_internal_username() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.username_.Get();
}
inline void LoginRequest::_internal_set_username(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.username_.Set(value, GetArena());
}
inline std::string* LoginRequest::_internal_mutable_username() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.username_.Mutable( GetArena());
}
inline std::string* LoginRequest::release_username() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:juncore.protocol.LoginRequest.username)
  return _impl_.username_.Release();
}
inline void LoginRequest::set_allocated_username(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.username_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.username_.IsDefault()) {
    _impl_.username_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:juncore.protocol.LoginRequest.username)
}

// string password = 2;
inline void LoginRequest::clear_password() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.password_.ClearToEmpty();
}
inline const std::string& LoginRequest::password() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:juncore.protocol.LoginRequest.password)
  return _internal_password();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LoginRequest::set_password(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.password_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:juncore.protocol.LoginRequest.password)
}
inline std::string* LoginRequest::mutable_password() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_password();
  // @@protoc_insertion_point(field_mutable:juncore.protocol.LoginRequest.password)
  return _s;
}
inline const std::string& LoginRequest::_internal_password() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.password_.Get();
}
inline void LoginRequest::_internal_set_password(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.password_.Set(value, GetArena());
}
inline std::string* LoginRequest::_internal_mutable_password() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.password_.Mutable( GetArena());
}
inline std::string* LoginRequest::release_password() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:juncore.protocol.LoginRequest.password)
  return _impl_.password_.Release();
}
inline void LoginRequest::set_allocated_password(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.password_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.password_.IsDefault()) {
    _impl_.password_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:juncore.protocol.LoginRequest.password)
}

// string version = 3;
inline void LoginRequest::clear_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.ClearToEmpty();
}
inline const std::string& LoginRequest::version() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:juncore.protocol.LoginRequest.version)
  return _internal_version();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LoginRequest::set_version(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:juncore.protocol.LoginRequest.version)
}
inline std::string* LoginRequest::mutable_version() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_version();
  // @@protoc_insertion_point(field_mutable:juncore.protocol.LoginRequest.version)
  return _s;
}
inline const std::string& LoginRequest::_internal_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.version_.Get();
}
inline void LoginRequest::_internal_set_version(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.Set(value, GetArena());
}
inline std::string* LoginRequest::_internal_mutable_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.version_.Mutable( GetArena());
}
inline std::string* LoginRequest::release_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:juncore.protocol.LoginRequest.version)
  return _impl_.version_.Release();
}
inline void LoginRequest::set_allocated_version(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.version_.IsDefault()) {
    _impl_.version_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:juncore.protocol.LoginRequest.version)
}

// -------------------------------------------------------------------

// LoginResponse

// bool success = 1;
inline void LoginResponse::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
}
inline bool LoginResponse::success() const {
  // @@protoc_insertion_point(field_get:juncore.protocol.LoginResponse.success)
  return _internal_success();
}
inline void LoginResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:juncore.protocol.LoginResponse.success)
}
inline bool LoginResponse::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void LoginResponse::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

// string message = 2;
inline void LoginResponse::clear_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.ClearToEmpty();
}
inline const std::string& LoginResponse::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:juncore.protocol.LoginResponse.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LoginResponse::set_message(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:juncore.protocol.LoginResponse.message)
}
inline std::string* LoginResponse::mutable_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:juncore.protocol.LoginResponse.message)
  return _s;
}
inline const std::string& LoginResponse::_internal_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_.Get();
}
inline void LoginResponse::_internal_set_message(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(value, GetArena());
}
inline std::string* LoginResponse::_internal_mutable_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.message_.Mutable( GetArena());
}
inline std::string* LoginResponse::release_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:juncore.protocol.LoginResponse.message)
  return _impl_.message_.Release();
}
inline void LoginResponse::set_allocated_message(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:juncore.protocol.LoginResponse.message)
}

// int32 player_id = 3;
inline void LoginResponse::clear_player_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_id_ = 0;
}
inline ::int32_t LoginResponse::player_id() const {
  // @@protoc_insertion_point(field_get:juncore.protocol.LoginResponse.player_id)
  return _internal_player_id();
}
inline void LoginResponse::set_player_id(::int32_t value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:juncore.protocol.LoginResponse.player_id)
}
inline ::int32_t LoginResponse::_internal_player_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.player_id_;
}
inline void LoginResponse::_internal_set_player_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_id_ = value;
}

// -------------------------------------------------------------------

// ChatMessage

// int32 player_id = 1;
inline void ChatMessage::clear_player_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_id_ = 0;
}
inline ::int32_t ChatMessage::player_id() const {
  // @@protoc_insertion_point(field_get:juncore.protocol.ChatMessage.player_id)
  return _internal_player_id();
}
inline void ChatMessage::set_player_id(::int32_t value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:juncore.protocol.ChatMessage.player_id)
}
inline ::int32_t ChatMessage::_internal_player_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.player_id_;
}
inline void ChatMessage::_internal_set_player_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_id_ = value;
}

// string message = 2;
inline void ChatMessage::clear_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.ClearToEmpty();
}
inline const std::string& ChatMessage::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:juncore.protocol.ChatMessage.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ChatMessage::set_message(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:juncore.protocol.ChatMessage.message)
}
inline std::string* ChatMessage::mutable_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:juncore.protocol.ChatMessage.message)
  return _s;
}
inline const std::string& ChatMessage::_internal_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_.Get();
}
inline void ChatMessage::_internal_set_message(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(value, GetArena());
}
inline std::string* ChatMessage::_internal_mutable_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.message_.Mutable( GetArena());
}
inline std::string* ChatMessage::release_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:juncore.protocol.ChatMessage.message)
  return _impl_.message_.Release();
}
inline void ChatMessage::set_allocated_message(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:juncore.protocol.ChatMessage.message)
}

// int64 timestamp = 3;
inline void ChatMessage::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = ::int64_t{0};
}
inline ::int64_t ChatMessage::timestamp() const {
  // @@protoc_insertion_point(field_get:juncore.protocol.ChatMessage.timestamp)
  return _internal_timestamp();
}
inline void ChatMessage::set_timestamp(::int64_t value) {
  _internal_set_timestamp(value);
  // @@protoc_insertion_point(field_set:juncore.protocol.ChatMessage.timestamp)
}
inline ::int64_t ChatMessage::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_;
}
inline void ChatMessage::_internal_set_timestamp(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = value;
}

// -------------------------------------------------------------------

// PlayerMove

// int32 player_id = 1;
inline void PlayerMove::clear_player_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_id_ = 0;
}
inline ::int32_t PlayerMove::player_id() const {
  // @@protoc_insertion_point(field_get:juncore.protocol.PlayerMove.player_id)
  return _internal_player_id();
}
inline void PlayerMove::set_player_id(::int32_t value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:juncore.protocol.PlayerMove.player_id)
}
inline ::int32_t PlayerMove::_internal_player_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.player_id_;
}
inline void PlayerMove::_internal_set_player_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_id_ = value;
}

// float x = 2;
inline void PlayerMove::clear_x() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = 0;
}
inline float PlayerMove::x() const {
  // @@protoc_insertion_point(field_get:juncore.protocol.PlayerMove.x)
  return _internal_x();
}
inline void PlayerMove::set_x(float value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:juncore.protocol.PlayerMove.x)
}
inline float PlayerMove::_internal_x() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.x_;
}
inline void PlayerMove::_internal_set_x(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = value;
}

// float y = 3;
inline void PlayerMove::clear_y() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = 0;
}
inline float PlayerMove::y() const {
  // @@protoc_insertion_point(field_get:juncore.protocol.PlayerMove.y)
  return _internal_y();
}
inline void PlayerMove::set_y(float value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:juncore.protocol.PlayerMove.y)
}
inline float PlayerMove::_internal_y() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.y_;
}
inline void PlayerMove::_internal_set_y(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = value;
}

// float z = 4;
inline void PlayerMove::clear_z() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.z_ = 0;
}
inline float PlayerMove::z() const {
  // @@protoc_insertion_point(field_get:juncore.protocol.PlayerMove.z)
  return _internal_z();
}
inline void PlayerMove::set_z(float value) {
  _internal_set_z(value);
  // @@protoc_insertion_point(field_set:juncore.protocol.PlayerMove.z)
}
inline float PlayerMove::_internal_z() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.z_;
}
inline void PlayerMove::_internal_set_z(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.z_ = value;
}

// float rotation = 5;
inline void PlayerMove::clear_rotation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rotation_ = 0;
}
inline float PlayerMove::rotation() const {
  // @@protoc_insertion_point(field_get:juncore.protocol.PlayerMove.rotation)
  return _internal_rotation();
}
inline void PlayerMove::set_rotation(float value) {
  _internal_set_rotation(value);
  // @@protoc_insertion_point(field_set:juncore.protocol.PlayerMove.rotation)
}
inline float PlayerMove::_internal_rotation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rotation_;
}
inline void PlayerMove::_internal_set_rotation(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rotation_ = value;
}

// -------------------------------------------------------------------

// PlayerPosition

// int32 player_id = 1;
inline void PlayerPosition::clear_player_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_id_ = 0;
}
inline ::int32_t PlayerPosition::player_id() const {
  // @@protoc_insertion_point(field_get:juncore.protocol.PlayerPosition.player_id)
  return _internal_player_id();
}
inline void PlayerPosition::set_player_id(::int32_t value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:juncore.protocol.PlayerPosition.player_id)
}
inline ::int32_t PlayerPosition::_internal_player_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.player_id_;
}
inline void PlayerPosition::_internal_set_player_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_id_ = value;
}

// float x = 2;
inline void PlayerPosition::clear_x() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = 0;
}
inline float PlayerPosition::x() const {
  // @@protoc_insertion_point(field_get:juncore.protocol.PlayerPosition.x)
  return _internal_x();
}
inline void PlayerPosition::set_x(float value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:juncore.protocol.PlayerPosition.x)
}
inline float PlayerPosition::_internal_x() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.x_;
}
inline void PlayerPosition::_internal_set_x(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = value;
}

// float y = 3;
inline void PlayerPosition::clear_y() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = 0;
}
inline float PlayerPosition::y() const {
  // @@protoc_insertion_point(field_get:juncore.protocol.PlayerPosition.y)
  return _internal_y();
}
inline void PlayerPosition::set_y(float value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:juncore.protocol.PlayerPosition.y)
}
inline float PlayerPosition::_internal_y() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.y_;
}
inline void PlayerPosition::_internal_set_y(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = value;
}

// float z = 4;
inline void PlayerPosition::clear_z() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.z_ = 0;
}
inline float PlayerPosition::z() const {
  // @@protoc_insertion_point(field_get:juncore.protocol.PlayerPosition.z)
  return _internal_z();
}
inline void PlayerPosition::set_z(float value) {
  _internal_set_z(value);
  // @@protoc_insertion_point(field_set:juncore.protocol.PlayerPosition.z)
}
inline float PlayerPosition::_internal_z() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.z_;
}
inline void PlayerPosition::_internal_set_z(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.z_ = value;
}

// float rotation = 5;
inline void PlayerPosition::clear_rotation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rotation_ = 0;
}
inline float PlayerPosition::rotation() const {
  // @@protoc_insertion_point(field_get:juncore.protocol.PlayerPosition.rotation)
  return _internal_rotation();
}
inline void PlayerPosition::set_rotation(float value) {
  _internal_set_rotation(value);
  // @@protoc_insertion_point(field_set:juncore.protocol.PlayerPosition.rotation)
}
inline float PlayerPosition::_internal_rotation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rotation_;
}
inline void PlayerPosition::_internal_set_rotation(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rotation_ = value;
}

// int64 timestamp = 6;
inline void PlayerPosition::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = ::int64_t{0};
}
inline ::int64_t PlayerPosition::timestamp() const {
  // @@protoc_insertion_point(field_get:juncore.protocol.PlayerPosition.timestamp)
  return _internal_timestamp();
}
inline void PlayerPosition::set_timestamp(::int64_t value) {
  _internal_set_timestamp(value);
  // @@protoc_insertion_point(field_set:juncore.protocol.PlayerPosition.timestamp)
}
inline ::int64_t PlayerPosition::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_;
}
inline void PlayerPosition::_internal_set_timestamp(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = value;
}

// -------------------------------------------------------------------

// PacketHeader

// .juncore.protocol.MessageType type = 1;
inline void PacketHeader::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = 0;
}
inline ::juncore::protocol::MessageType PacketHeader::type() const {
  // @@protoc_insertion_point(field_get:juncore.protocol.PacketHeader.type)
  return _internal_type();
}
inline void PacketHeader::set_type(::juncore::protocol::MessageType value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:juncore.protocol.PacketHeader.type)
}
inline ::juncore::protocol::MessageType PacketHeader::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::juncore::protocol::MessageType>(_impl_.type_);
}
inline void PacketHeader::_internal_set_type(::juncore::protocol::MessageType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = value;
}

// int32 size = 2;
inline void PacketHeader::clear_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.size_ = 0;
}
inline ::int32_t PacketHeader::size() const {
  // @@protoc_insertion_point(field_get:juncore.protocol.PacketHeader.size)
  return _internal_size();
}
inline void PacketHeader::set_size(::int32_t value) {
  _internal_set_size(value);
  // @@protoc_insertion_point(field_set:juncore.protocol.PacketHeader.size)
}
inline ::int32_t PacketHeader::_internal_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.size_;
}
inline void PacketHeader::_internal_set_size(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.size_ = value;
}

// int64 timestamp = 3;
inline void PacketHeader::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = ::int64_t{0};
}
inline ::int64_t PacketHeader::timestamp() const {
  // @@protoc_insertion_point(field_get:juncore.protocol.PacketHeader.timestamp)
  return _internal_timestamp();
}
inline void PacketHeader::set_timestamp(::int64_t value) {
  _internal_set_timestamp(value);
  // @@protoc_insertion_point(field_set:juncore.protocol.PacketHeader.timestamp)
}
inline ::int64_t PacketHeader::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_;
}
inline void PacketHeader::_internal_set_timestamp(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = value;
}

// -------------------------------------------------------------------

// GamePacket

// .juncore.protocol.PacketHeader header = 1;
inline bool GamePacket::has_header() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.header_ != nullptr);
  return value;
}
inline void GamePacket::clear_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.header_ != nullptr) _impl_.header_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::juncore::protocol::PacketHeader& GamePacket::_internal_header() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::juncore::protocol::PacketHeader* p = _impl_.header_;
  return p != nullptr ? *p : reinterpret_cast<const ::juncore::protocol::PacketHeader&>(::juncore::protocol::_PacketHeader_default_instance_);
}
inline const ::juncore::protocol::PacketHeader& GamePacket::header() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:juncore.protocol.GamePacket.header)
  return _internal_header();
}
inline void GamePacket::unsafe_arena_set_allocated_header(::juncore::protocol::PacketHeader* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.header_);
  }
  _impl_.header_ = reinterpret_cast<::juncore::protocol::PacketHeader*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:juncore.protocol.GamePacket.header)
}
inline ::juncore::protocol::PacketHeader* GamePacket::release_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::juncore::protocol::PacketHeader* released = _impl_.header_;
  _impl_.header_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::juncore::protocol::PacketHeader* GamePacket::unsafe_arena_release_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:juncore.protocol.GamePacket.header)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::juncore::protocol::PacketHeader* temp = _impl_.header_;
  _impl_.header_ = nullptr;
  return temp;
}
inline ::juncore::protocol::PacketHeader* GamePacket::_internal_mutable_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.header_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::juncore::protocol::PacketHeader>(GetArena());
    _impl_.header_ = reinterpret_cast<::juncore::protocol::PacketHeader*>(p);
  }
  return _impl_.header_;
}
inline ::juncore::protocol::PacketHeader* GamePacket::mutable_header() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::juncore::protocol::PacketHeader* _msg = _internal_mutable_header();
  // @@protoc_insertion_point(field_mutable:juncore.protocol.GamePacket.header)
  return _msg;
}
inline void GamePacket::set_allocated_header(::juncore::protocol::PacketHeader* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.header_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.header_ = reinterpret_cast<::juncore::protocol::PacketHeader*>(value);
  // @@protoc_insertion_point(field_set_allocated:juncore.protocol.GamePacket.header)
}

// .juncore.protocol.LoginRequest login_request = 2;
inline bool GamePacket::has_login_request() const {
  return payload_case() == kLoginRequest;
}
inline bool GamePacket::_internal_has_login_request() const {
  return payload_case() == kLoginRequest;
}
inline void GamePacket::set_has_login_request() {
  _impl_._oneof_case_[0] = kLoginRequest;
}
inline void GamePacket::clear_login_request() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kLoginRequest) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.login_request_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.login_request_);
    }
    clear_has_payload();
  }
}
inline ::juncore::protocol::LoginRequest* GamePacket::release_login_request() {
  // @@protoc_insertion_point(field_release:juncore.protocol.GamePacket.login_request)
  if (payload_case() == kLoginRequest) {
    clear_has_payload();
    auto* temp = _impl_.payload_.login_request_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.payload_.login_request_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::juncore::protocol::LoginRequest& GamePacket::_internal_login_request() const {
  return payload_case() == kLoginRequest ? *_impl_.payload_.login_request_ : reinterpret_cast<::juncore::protocol::LoginRequest&>(::juncore::protocol::_LoginRequest_default_instance_);
}
inline const ::juncore::protocol::LoginRequest& GamePacket::login_request() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:juncore.protocol.GamePacket.login_request)
  return _internal_login_request();
}
inline ::juncore::protocol::LoginRequest* GamePacket::unsafe_arena_release_login_request() {
  // @@protoc_insertion_point(field_unsafe_arena_release:juncore.protocol.GamePacket.login_request)
  if (payload_case() == kLoginRequest) {
    clear_has_payload();
    auto* temp = _impl_.payload_.login_request_;
    _impl_.payload_.login_request_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void GamePacket::unsafe_arena_set_allocated_login_request(::juncore::protocol::LoginRequest* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_payload();
  if (value) {
    set_has_login_request();
    _impl_.payload_.login_request_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:juncore.protocol.GamePacket.login_request)
}
inline ::juncore::protocol::LoginRequest* GamePacket::_internal_mutable_login_request() {
  if (payload_case() != kLoginRequest) {
    clear_payload();
    set_has_login_request();
    _impl_.payload_.login_request_ =
        ::google::protobuf::Message::DefaultConstruct<::juncore::protocol::LoginRequest>(GetArena());
  }
  return _impl_.payload_.login_request_;
}
inline ::juncore::protocol::LoginRequest* GamePacket::mutable_login_request() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::juncore::protocol::LoginRequest* _msg = _internal_mutable_login_request();
  // @@protoc_insertion_point(field_mutable:juncore.protocol.GamePacket.login_request)
  return _msg;
}

// .juncore.protocol.LoginResponse login_response = 3;
inline bool GamePacket::has_login_response() const {
  return payload_case() == kLoginResponse;
}
inline bool GamePacket::_internal_has_login_response() const {
  return payload_case() == kLoginResponse;
}
inline void GamePacket::set_has_login_response() {
  _impl_._oneof_case_[0] = kLoginResponse;
}
inline void GamePacket::clear_login_response() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kLoginResponse) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.login_response_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.login_response_);
    }
    clear_has_payload();
  }
}
inline ::juncore::protocol::LoginResponse* GamePacket::release_login_response() {
  // @@protoc_insertion_point(field_release:juncore.protocol.GamePacket.login_response)
  if (payload_case() == kLoginResponse) {
    clear_has_payload();
    auto* temp = _impl_.payload_.login_response_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.payload_.login_response_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::juncore::protocol::LoginResponse& GamePacket::_internal_login_response() const {
  return payload_case() == kLoginResponse ? *_impl_.payload_.login_response_ : reinterpret_cast<::juncore::protocol::LoginResponse&>(::juncore::protocol::_LoginResponse_default_instance_);
}
inline const ::juncore::protocol::LoginResponse& GamePacket::login_response() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:juncore.protocol.GamePacket.login_response)
  return _internal_login_response();
}
inline ::juncore::protocol::LoginResponse* GamePacket::unsafe_arena_release_login_response() {
  // @@protoc_insertion_point(field_unsafe_arena_release:juncore.protocol.GamePacket.login_response)
  if (payload_case() == kLoginResponse) {
    clear_has_payload();
    auto* temp = _impl_.payload_.login_response_;
    _impl_.payload_.login_response_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void GamePacket::unsafe_arena_set_allocated_login_response(::juncore::protocol::LoginResponse* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_payload();
  if (value) {
    set_has_login_response();
    _impl_.payload_.login_response_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:juncore.protocol.GamePacket.login_response)
}
inline ::juncore::protocol::LoginResponse* GamePacket::_internal_mutable_login_response() {
  if (payload_case() != kLoginResponse) {
    clear_payload();
    set_has_login_response();
    _impl_.payload_.login_response_ =
        ::google::protobuf::Message::DefaultConstruct<::juncore::protocol::LoginResponse>(GetArena());
  }
  return _impl_.payload_.login_response_;
}
inline ::juncore::protocol::LoginResponse* GamePacket::mutable_login_response() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::juncore::protocol::LoginResponse* _msg = _internal_mutable_login_response();
  // @@protoc_insertion_point(field_mutable:juncore.protocol.GamePacket.login_response)
  return _msg;
}

// .juncore.protocol.ChatMessage chat_message = 4;
inline bool GamePacket::has_chat_message() const {
  return payload_case() == kChatMessage;
}
inline bool GamePacket::_internal_has_chat_message() const {
  return payload_case() == kChatMessage;
}
inline void GamePacket::set_has_chat_message() {
  _impl_._oneof_case_[0] = kChatMessage;
}
inline void GamePacket::clear_chat_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kChatMessage) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.chat_message_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.chat_message_);
    }
    clear_has_payload();
  }
}
inline ::juncore::protocol::ChatMessage* GamePacket::release_chat_message() {
  // @@protoc_insertion_point(field_release:juncore.protocol.GamePacket.chat_message)
  if (payload_case() == kChatMessage) {
    clear_has_payload();
    auto* temp = _impl_.payload_.chat_message_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.payload_.chat_message_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::juncore::protocol::ChatMessage& GamePacket::_internal_chat_message() const {
  return payload_case() == kChatMessage ? *_impl_.payload_.chat_message_ : reinterpret_cast<::juncore::protocol::ChatMessage&>(::juncore::protocol::_ChatMessage_default_instance_);
}
inline const ::juncore::protocol::ChatMessage& GamePacket::chat_message() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:juncore.protocol.GamePacket.chat_message)
  return _internal_chat_message();
}
inline ::juncore::protocol::ChatMessage* GamePacket::unsafe_arena_release_chat_message() {
  // @@protoc_insertion_point(field_unsafe_arena_release:juncore.protocol.GamePacket.chat_message)
  if (payload_case() == kChatMessage) {
    clear_has_payload();
    auto* temp = _impl_.payload_.chat_message_;
    _impl_.payload_.chat_message_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void GamePacket::unsafe_arena_set_allocated_chat_message(::juncore::protocol::ChatMessage* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_payload();
  if (value) {
    set_has_chat_message();
    _impl_.payload_.chat_message_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:juncore.protocol.GamePacket.chat_message)
}
inline ::juncore::protocol::ChatMessage* GamePacket::_internal_mutable_chat_message() {
  if (payload_case() != kChatMessage) {
    clear_payload();
    set_has_chat_message();
    _impl_.payload_.chat_message_ =
        ::google::protobuf::Message::DefaultConstruct<::juncore::protocol::ChatMessage>(GetArena());
  }
  return _impl_.payload_.chat_message_;
}
inline ::juncore::protocol::ChatMessage* GamePacket::mutable_chat_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::juncore::protocol::ChatMessage* _msg = _internal_mutable_chat_message();
  // @@protoc_insertion_point(field_mutable:juncore.protocol.GamePacket.chat_message)
  return _msg;
}

// .juncore.protocol.PlayerMove player_move = 5;
inline bool GamePacket::has_player_move() const {
  return payload_case() == kPlayerMove;
}
inline bool GamePacket::_internal_has_player_move() const {
  return payload_case() == kPlayerMove;
}
inline void GamePacket::set_has_player_move() {
  _impl_._oneof_case_[0] = kPlayerMove;
}
inline void GamePacket::clear_player_move() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kPlayerMove) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.player_move_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.player_move_);
    }
    clear_has_payload();
  }
}
inline ::juncore::protocol::PlayerMove* GamePacket::release_player_move() {
  // @@protoc_insertion_point(field_release:juncore.protocol.GamePacket.player_move)
  if (payload_case() == kPlayerMove) {
    clear_has_payload();
    auto* temp = _impl_.payload_.player_move_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.payload_.player_move_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::juncore::protocol::PlayerMove& GamePacket::_internal_player_move() const {
  return payload_case() == kPlayerMove ? *_impl_.payload_.player_move_ : reinterpret_cast<::juncore::protocol::PlayerMove&>(::juncore::protocol::_PlayerMove_default_instance_);
}
inline const ::juncore::protocol::PlayerMove& GamePacket::player_move() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:juncore.protocol.GamePacket.player_move)
  return _internal_player_move();
}
inline ::juncore::protocol::PlayerMove* GamePacket::unsafe_arena_release_player_move() {
  // @@protoc_insertion_point(field_unsafe_arena_release:juncore.protocol.GamePacket.player_move)
  if (payload_case() == kPlayerMove) {
    clear_has_payload();
    auto* temp = _impl_.payload_.player_move_;
    _impl_.payload_.player_move_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void GamePacket::unsafe_arena_set_allocated_player_move(::juncore::protocol::PlayerMove* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_payload();
  if (value) {
    set_has_player_move();
    _impl_.payload_.player_move_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:juncore.protocol.GamePacket.player_move)
}
inline ::juncore::protocol::PlayerMove* GamePacket::_internal_mutable_player_move() {
  if (payload_case() != kPlayerMove) {
    clear_payload();
    set_has_player_move();
    _impl_.payload_.player_move_ =
        ::google::protobuf::Message::DefaultConstruct<::juncore::protocol::PlayerMove>(GetArena());
  }
  return _impl_.payload_.player_move_;
}
inline ::juncore::protocol::PlayerMove* GamePacket::mutable_player_move() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::juncore::protocol::PlayerMove* _msg = _internal_mutable_player_move();
  // @@protoc_insertion_point(field_mutable:juncore.protocol.GamePacket.player_move)
  return _msg;
}

// .juncore.protocol.PlayerPosition player_position = 6;
inline bool GamePacket::has_player_position() const {
  return payload_case() == kPlayerPosition;
}
inline bool GamePacket::_internal_has_player_position() const {
  return payload_case() == kPlayerPosition;
}
inline void GamePacket::set_has_player_position() {
  _impl_._oneof_case_[0] = kPlayerPosition;
}
inline void GamePacket::clear_player_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kPlayerPosition) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.player_position_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.player_position_);
    }
    clear_has_payload();
  }
}
inline ::juncore::protocol::PlayerPosition* GamePacket::release_player_position() {
  // @@protoc_insertion_point(field_release:juncore.protocol.GamePacket.player_position)
  if (payload_case() == kPlayerPosition) {
    clear_has_payload();
    auto* temp = _impl_.payload_.player_position_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.payload_.player_position_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::juncore::protocol::PlayerPosition& GamePacket::_internal_player_position() const {
  return payload_case() == kPlayerPosition ? *_impl_.payload_.player_position_ : reinterpret_cast<::juncore::protocol::PlayerPosition&>(::juncore::protocol::_PlayerPosition_default_instance_);
}
inline const ::juncore::protocol::PlayerPosition& GamePacket::player_position() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:juncore.protocol.GamePacket.player_position)
  return _internal_player_position();
}
inline ::juncore::protocol::PlayerPosition* GamePacket::unsafe_arena_release_player_position() {
  // @@protoc_insertion_point(field_unsafe_arena_release:juncore.protocol.GamePacket.player_position)
  if (payload_case() == kPlayerPosition) {
    clear_has_payload();
    auto* temp = _impl_.payload_.player_position_;
    _impl_.payload_.player_position_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void GamePacket::unsafe_arena_set_allocated_player_position(::juncore::protocol::PlayerPosition* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_payload();
  if (value) {
    set_has_player_position();
    _impl_.payload_.player_position_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:juncore.protocol.GamePacket.player_position)
}
inline ::juncore::protocol::PlayerPosition* GamePacket::_internal_mutable_player_position() {
  if (payload_case() != kPlayerPosition) {
    clear_payload();
    set_has_player_position();
    _impl_.payload_.player_position_ =
        ::google::protobuf::Message::DefaultConstruct<::juncore::protocol::PlayerPosition>(GetArena());
  }
  return _impl_.payload_.player_position_;
}
inline ::juncore::protocol::PlayerPosition* GamePacket::mutable_player_position() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::juncore::protocol::PlayerPosition* _msg = _internal_mutable_player_position();
  // @@protoc_insertion_point(field_mutable:juncore.protocol.GamePacket.player_position)
  return _msg;
}

inline bool GamePacket::has_payload() const {
  return payload_case() != PAYLOAD_NOT_SET;
}
inline void GamePacket::clear_has_payload() {
  _impl_._oneof_case_[0] = PAYLOAD_NOT_SET;
}
inline GamePacket::PayloadCase GamePacket::payload_case() const {
  return GamePacket::PayloadCase(_impl_._oneof_case_[0]);
}
#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace protocol
}  // namespace juncore


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::juncore::protocol::MessageType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::juncore::protocol::MessageType>() {
  return ::juncore::protocol::MessageType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // Protocol_2fGameMessage_2eproto_2epb_2eh
