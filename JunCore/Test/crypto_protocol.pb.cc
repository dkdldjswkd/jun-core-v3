// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: crypto_protocol.proto
// Protobuf C++ Version: 5.29.3

#include "crypto_protocol.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace crypto {

inline constexpr ServerResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : result_message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        request_id_{0u},
        result_code_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ServerResponse::ServerResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ServerResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ServerResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ServerResponseDefaultTypeInternal() {}
  union {
    ServerResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ServerResponseDefaultTypeInternal _ServerResponse_default_instance_;

inline constexpr ServerPublicKey::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : rsa_public_key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        server_version_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        session_id_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ServerPublicKey::ServerPublicKey(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ServerPublicKeyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ServerPublicKeyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ServerPublicKeyDefaultTypeInternal() {}
  union {
    ServerPublicKey _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ServerPublicKeyDefaultTypeInternal _ServerPublicKey_default_instance_;

inline constexpr HandshakeComplete::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : status_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        test_message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        session_id_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR HandshakeComplete::HandshakeComplete(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HandshakeCompleteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HandshakeCompleteDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HandshakeCompleteDefaultTypeInternal() {}
  union {
    HandshakeComplete _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HandshakeCompleteDefaultTypeInternal _HandshakeComplete_default_instance_;

inline constexpr GameData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : payload_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_{::uint64_t{0u}},
        message_type_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GameData::GameData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GameDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GameDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GameDataDefaultTypeInternal() {}
  union {
    GameData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GameDataDefaultTypeInternal _GameData_default_instance_;

inline constexpr ClientPublicKey::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : rsa_public_key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        client_version_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ClientPublicKey::ClientPublicKey(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ClientPublicKeyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ClientPublicKeyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ClientPublicKeyDefaultTypeInternal() {}
  union {
    ClientPublicKey _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ClientPublicKeyDefaultTypeInternal _ClientPublicKey_default_instance_;

inline constexpr ChatMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : username_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_{::uint64_t{0u}},
        user_id_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ChatMessage::ChatMessage(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ChatMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChatMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChatMessageDefaultTypeInternal() {}
  union {
    ChatMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChatMessageDefaultTypeInternal _ChatMessage_default_instance_;

inline constexpr AESKeyDelivery::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : encrypted_aes_key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        encrypted_aes_iv_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        session_id_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AESKeyDelivery::AESKeyDelivery(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AESKeyDeliveryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AESKeyDeliveryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AESKeyDeliveryDefaultTypeInternal() {}
  union {
    AESKeyDelivery _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AESKeyDeliveryDefaultTypeInternal _AESKeyDelivery_default_instance_;
}  // namespace crypto
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_crypto_5fprotocol_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_crypto_5fprotocol_2eproto = nullptr;
const ::uint32_t
    TableStruct_crypto_5fprotocol_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::crypto::ClientPublicKey, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::crypto::ClientPublicKey, _impl_.rsa_public_key_),
        PROTOBUF_FIELD_OFFSET(::crypto::ClientPublicKey, _impl_.client_version_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::crypto::ServerPublicKey, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::crypto::ServerPublicKey, _impl_.rsa_public_key_),
        PROTOBUF_FIELD_OFFSET(::crypto::ServerPublicKey, _impl_.server_version_),
        PROTOBUF_FIELD_OFFSET(::crypto::ServerPublicKey, _impl_.session_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::crypto::AESKeyDelivery, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::crypto::AESKeyDelivery, _impl_.encrypted_aes_key_),
        PROTOBUF_FIELD_OFFSET(::crypto::AESKeyDelivery, _impl_.encrypted_aes_iv_),
        PROTOBUF_FIELD_OFFSET(::crypto::AESKeyDelivery, _impl_.session_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::crypto::HandshakeComplete, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::crypto::HandshakeComplete, _impl_.session_id_),
        PROTOBUF_FIELD_OFFSET(::crypto::HandshakeComplete, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::crypto::HandshakeComplete, _impl_.test_message_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::crypto::GameData, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::crypto::GameData, _impl_.message_type_),
        PROTOBUF_FIELD_OFFSET(::crypto::GameData, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::crypto::GameData, _impl_.payload_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::crypto::ChatMessage, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::crypto::ChatMessage, _impl_.user_id_),
        PROTOBUF_FIELD_OFFSET(::crypto::ChatMessage, _impl_.username_),
        PROTOBUF_FIELD_OFFSET(::crypto::ChatMessage, _impl_.message_),
        PROTOBUF_FIELD_OFFSET(::crypto::ChatMessage, _impl_.timestamp_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::crypto::ServerResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::crypto::ServerResponse, _impl_.request_id_),
        PROTOBUF_FIELD_OFFSET(::crypto::ServerResponse, _impl_.result_code_),
        PROTOBUF_FIELD_OFFSET(::crypto::ServerResponse, _impl_.result_message_),
        PROTOBUF_FIELD_OFFSET(::crypto::ServerResponse, _impl_.data_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::crypto::ClientPublicKey)},
        {10, -1, -1, sizeof(::crypto::ServerPublicKey)},
        {21, -1, -1, sizeof(::crypto::AESKeyDelivery)},
        {32, -1, -1, sizeof(::crypto::HandshakeComplete)},
        {43, -1, -1, sizeof(::crypto::GameData)},
        {54, -1, -1, sizeof(::crypto::ChatMessage)},
        {66, -1, -1, sizeof(::crypto::ServerResponse)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::crypto::_ClientPublicKey_default_instance_._instance,
    &::crypto::_ServerPublicKey_default_instance_._instance,
    &::crypto::_AESKeyDelivery_default_instance_._instance,
    &::crypto::_HandshakeComplete_default_instance_._instance,
    &::crypto::_GameData_default_instance_._instance,
    &::crypto::_ChatMessage_default_instance_._instance,
    &::crypto::_ServerResponse_default_instance_._instance,
};
const char descriptor_table_protodef_crypto_5fprotocol_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\025crypto_protocol.proto\022\006crypto\"A\n\017Clien"
    "tPublicKey\022\026\n\016rsa_public_key\030\001 \001(\t\022\026\n\016cl"
    "ient_version\030\002 \001(\t\"U\n\017ServerPublicKey\022\026\n"
    "\016rsa_public_key\030\001 \001(\t\022\026\n\016server_version\030"
    "\002 \001(\t\022\022\n\nsession_id\030\003 \001(\r\"Y\n\016AESKeyDeliv"
    "ery\022\031\n\021encrypted_aes_key\030\001 \001(\t\022\030\n\020encryp"
    "ted_aes_iv\030\002 \001(\t\022\022\n\nsession_id\030\003 \001(\r\"M\n\021"
    "HandshakeComplete\022\022\n\nsession_id\030\001 \001(\r\022\016\n"
    "\006status\030\002 \001(\t\022\024\n\014test_message\030\003 \001(\t\"D\n\010G"
    "ameData\022\024\n\014message_type\030\001 \001(\r\022\021\n\ttimesta"
    "mp\030\002 \001(\004\022\017\n\007payload\030\003 \001(\t\"T\n\013ChatMessage"
    "\022\017\n\007user_id\030\001 \001(\r\022\020\n\010username\030\002 \001(\t\022\017\n\007m"
    "essage\030\003 \001(\t\022\021\n\ttimestamp\030\004 \001(\004\"_\n\016Serve"
    "rResponse\022\022\n\nrequest_id\030\001 \001(\r\022\023\n\013result_"
    "code\030\002 \001(\005\022\026\n\016result_message\030\003 \001(\t\022\014\n\004da"
    "ta\030\004 \001(\tb\006proto3"
};
static ::absl::once_flag descriptor_table_crypto_5fprotocol_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_crypto_5fprotocol_2eproto = {
    false,
    false,
    616,
    descriptor_table_protodef_crypto_5fprotocol_2eproto,
    "crypto_protocol.proto",
    &descriptor_table_crypto_5fprotocol_2eproto_once,
    nullptr,
    0,
    7,
    schemas,
    file_default_instances,
    TableStruct_crypto_5fprotocol_2eproto::offsets,
    file_level_enum_descriptors_crypto_5fprotocol_2eproto,
    file_level_service_descriptors_crypto_5fprotocol_2eproto,
};
namespace crypto {
// ===================================================================

class ClientPublicKey::_Internal {
 public:
};

ClientPublicKey::ClientPublicKey(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:crypto.ClientPublicKey)
}
inline PROTOBUF_NDEBUG_INLINE ClientPublicKey::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::crypto::ClientPublicKey& from_msg)
      : rsa_public_key_(arena, from.rsa_public_key_),
        client_version_(arena, from.client_version_),
        _cached_size_{0} {}

ClientPublicKey::ClientPublicKey(
    ::google::protobuf::Arena* arena,
    const ClientPublicKey& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ClientPublicKey* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:crypto.ClientPublicKey)
}
inline PROTOBUF_NDEBUG_INLINE ClientPublicKey::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : rsa_public_key_(arena),
        client_version_(arena),
        _cached_size_{0} {}

inline void ClientPublicKey::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ClientPublicKey::~ClientPublicKey() {
  // @@protoc_insertion_point(destructor:crypto.ClientPublicKey)
  SharedDtor(*this);
}
inline void ClientPublicKey::SharedDtor(MessageLite& self) {
  ClientPublicKey& this_ = static_cast<ClientPublicKey&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.rsa_public_key_.Destroy();
  this_._impl_.client_version_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ClientPublicKey::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ClientPublicKey(arena);
}
constexpr auto ClientPublicKey::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ClientPublicKey),
                                            alignof(ClientPublicKey));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ClientPublicKey::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ClientPublicKey_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ClientPublicKey::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ClientPublicKey>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ClientPublicKey::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ClientPublicKey>(), &ClientPublicKey::ByteSizeLong,
            &ClientPublicKey::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ClientPublicKey, _impl_._cached_size_),
        false,
    },
    &ClientPublicKey::kDescriptorMethods,
    &descriptor_table_crypto_5fprotocol_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ClientPublicKey::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 59, 2> ClientPublicKey::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::crypto::ClientPublicKey>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string client_version = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ClientPublicKey, _impl_.client_version_)}},
    // string rsa_public_key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ClientPublicKey, _impl_.rsa_public_key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string rsa_public_key = 1;
    {PROTOBUF_FIELD_OFFSET(ClientPublicKey, _impl_.rsa_public_key_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string client_version = 2;
    {PROTOBUF_FIELD_OFFSET(ClientPublicKey, _impl_.client_version_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\26\16\16\0\0\0\0\0"
    "crypto.ClientPublicKey"
    "rsa_public_key"
    "client_version"
  }},
};

PROTOBUF_NOINLINE void ClientPublicKey::Clear() {
// @@protoc_insertion_point(message_clear_start:crypto.ClientPublicKey)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rsa_public_key_.ClearToEmpty();
  _impl_.client_version_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ClientPublicKey::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ClientPublicKey& this_ = static_cast<const ClientPublicKey&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ClientPublicKey::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ClientPublicKey& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:crypto.ClientPublicKey)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string rsa_public_key = 1;
          if (!this_._internal_rsa_public_key().empty()) {
            const std::string& _s = this_._internal_rsa_public_key();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "crypto.ClientPublicKey.rsa_public_key");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string client_version = 2;
          if (!this_._internal_client_version().empty()) {
            const std::string& _s = this_._internal_client_version();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "crypto.ClientPublicKey.client_version");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:crypto.ClientPublicKey)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ClientPublicKey::ByteSizeLong(const MessageLite& base) {
          const ClientPublicKey& this_ = static_cast<const ClientPublicKey&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ClientPublicKey::ByteSizeLong() const {
          const ClientPublicKey& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:crypto.ClientPublicKey)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string rsa_public_key = 1;
            if (!this_._internal_rsa_public_key().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_rsa_public_key());
            }
            // string client_version = 2;
            if (!this_._internal_client_version().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_client_version());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ClientPublicKey::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ClientPublicKey*>(&to_msg);
  auto& from = static_cast<const ClientPublicKey&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:crypto.ClientPublicKey)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_rsa_public_key().empty()) {
    _this->_internal_set_rsa_public_key(from._internal_rsa_public_key());
  }
  if (!from._internal_client_version().empty()) {
    _this->_internal_set_client_version(from._internal_client_version());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ClientPublicKey::CopyFrom(const ClientPublicKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:crypto.ClientPublicKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ClientPublicKey::InternalSwap(ClientPublicKey* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.rsa_public_key_, &other->_impl_.rsa_public_key_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.client_version_, &other->_impl_.client_version_, arena);
}

::google::protobuf::Metadata ClientPublicKey::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ServerPublicKey::_Internal {
 public:
};

ServerPublicKey::ServerPublicKey(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:crypto.ServerPublicKey)
}
inline PROTOBUF_NDEBUG_INLINE ServerPublicKey::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::crypto::ServerPublicKey& from_msg)
      : rsa_public_key_(arena, from.rsa_public_key_),
        server_version_(arena, from.server_version_),
        _cached_size_{0} {}

ServerPublicKey::ServerPublicKey(
    ::google::protobuf::Arena* arena,
    const ServerPublicKey& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ServerPublicKey* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.session_id_ = from._impl_.session_id_;

  // @@protoc_insertion_point(copy_constructor:crypto.ServerPublicKey)
}
inline PROTOBUF_NDEBUG_INLINE ServerPublicKey::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : rsa_public_key_(arena),
        server_version_(arena),
        _cached_size_{0} {}

inline void ServerPublicKey::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.session_id_ = {};
}
ServerPublicKey::~ServerPublicKey() {
  // @@protoc_insertion_point(destructor:crypto.ServerPublicKey)
  SharedDtor(*this);
}
inline void ServerPublicKey::SharedDtor(MessageLite& self) {
  ServerPublicKey& this_ = static_cast<ServerPublicKey&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.rsa_public_key_.Destroy();
  this_._impl_.server_version_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ServerPublicKey::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ServerPublicKey(arena);
}
constexpr auto ServerPublicKey::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ServerPublicKey),
                                            alignof(ServerPublicKey));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ServerPublicKey::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ServerPublicKey_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ServerPublicKey::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ServerPublicKey>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ServerPublicKey::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ServerPublicKey>(), &ServerPublicKey::ByteSizeLong,
            &ServerPublicKey::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ServerPublicKey, _impl_._cached_size_),
        false,
    },
    &ServerPublicKey::kDescriptorMethods,
    &descriptor_table_crypto_5fprotocol_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ServerPublicKey::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 59, 2> ServerPublicKey::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::crypto::ServerPublicKey>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string rsa_public_key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ServerPublicKey, _impl_.rsa_public_key_)}},
    // string server_version = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ServerPublicKey, _impl_.server_version_)}},
    // uint32 session_id = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ServerPublicKey, _impl_.session_id_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(ServerPublicKey, _impl_.session_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string rsa_public_key = 1;
    {PROTOBUF_FIELD_OFFSET(ServerPublicKey, _impl_.rsa_public_key_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string server_version = 2;
    {PROTOBUF_FIELD_OFFSET(ServerPublicKey, _impl_.server_version_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 session_id = 3;
    {PROTOBUF_FIELD_OFFSET(ServerPublicKey, _impl_.session_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\26\16\16\0\0\0\0\0"
    "crypto.ServerPublicKey"
    "rsa_public_key"
    "server_version"
  }},
};

PROTOBUF_NOINLINE void ServerPublicKey::Clear() {
// @@protoc_insertion_point(message_clear_start:crypto.ServerPublicKey)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rsa_public_key_.ClearToEmpty();
  _impl_.server_version_.ClearToEmpty();
  _impl_.session_id_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ServerPublicKey::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ServerPublicKey& this_ = static_cast<const ServerPublicKey&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ServerPublicKey::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ServerPublicKey& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:crypto.ServerPublicKey)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string rsa_public_key = 1;
          if (!this_._internal_rsa_public_key().empty()) {
            const std::string& _s = this_._internal_rsa_public_key();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "crypto.ServerPublicKey.rsa_public_key");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string server_version = 2;
          if (!this_._internal_server_version().empty()) {
            const std::string& _s = this_._internal_server_version();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "crypto.ServerPublicKey.server_version");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // uint32 session_id = 3;
          if (this_._internal_session_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                3, this_._internal_session_id(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:crypto.ServerPublicKey)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ServerPublicKey::ByteSizeLong(const MessageLite& base) {
          const ServerPublicKey& this_ = static_cast<const ServerPublicKey&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ServerPublicKey::ByteSizeLong() const {
          const ServerPublicKey& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:crypto.ServerPublicKey)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string rsa_public_key = 1;
            if (!this_._internal_rsa_public_key().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_rsa_public_key());
            }
            // string server_version = 2;
            if (!this_._internal_server_version().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_server_version());
            }
            // uint32 session_id = 3;
            if (this_._internal_session_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_session_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ServerPublicKey::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ServerPublicKey*>(&to_msg);
  auto& from = static_cast<const ServerPublicKey&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:crypto.ServerPublicKey)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_rsa_public_key().empty()) {
    _this->_internal_set_rsa_public_key(from._internal_rsa_public_key());
  }
  if (!from._internal_server_version().empty()) {
    _this->_internal_set_server_version(from._internal_server_version());
  }
  if (from._internal_session_id() != 0) {
    _this->_impl_.session_id_ = from._impl_.session_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ServerPublicKey::CopyFrom(const ServerPublicKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:crypto.ServerPublicKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ServerPublicKey::InternalSwap(ServerPublicKey* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.rsa_public_key_, &other->_impl_.rsa_public_key_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.server_version_, &other->_impl_.server_version_, arena);
        swap(_impl_.session_id_, other->_impl_.session_id_);
}

::google::protobuf::Metadata ServerPublicKey::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AESKeyDelivery::_Internal {
 public:
};

AESKeyDelivery::AESKeyDelivery(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:crypto.AESKeyDelivery)
}
inline PROTOBUF_NDEBUG_INLINE AESKeyDelivery::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::crypto::AESKeyDelivery& from_msg)
      : encrypted_aes_key_(arena, from.encrypted_aes_key_),
        encrypted_aes_iv_(arena, from.encrypted_aes_iv_),
        _cached_size_{0} {}

AESKeyDelivery::AESKeyDelivery(
    ::google::protobuf::Arena* arena,
    const AESKeyDelivery& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AESKeyDelivery* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.session_id_ = from._impl_.session_id_;

  // @@protoc_insertion_point(copy_constructor:crypto.AESKeyDelivery)
}
inline PROTOBUF_NDEBUG_INLINE AESKeyDelivery::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : encrypted_aes_key_(arena),
        encrypted_aes_iv_(arena),
        _cached_size_{0} {}

inline void AESKeyDelivery::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.session_id_ = {};
}
AESKeyDelivery::~AESKeyDelivery() {
  // @@protoc_insertion_point(destructor:crypto.AESKeyDelivery)
  SharedDtor(*this);
}
inline void AESKeyDelivery::SharedDtor(MessageLite& self) {
  AESKeyDelivery& this_ = static_cast<AESKeyDelivery&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.encrypted_aes_key_.Destroy();
  this_._impl_.encrypted_aes_iv_.Destroy();
  this_._impl_.~Impl_();
}

inline void* AESKeyDelivery::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AESKeyDelivery(arena);
}
constexpr auto AESKeyDelivery::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(AESKeyDelivery),
                                            alignof(AESKeyDelivery));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AESKeyDelivery::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AESKeyDelivery_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AESKeyDelivery::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AESKeyDelivery>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AESKeyDelivery::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AESKeyDelivery>(), &AESKeyDelivery::ByteSizeLong,
            &AESKeyDelivery::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AESKeyDelivery, _impl_._cached_size_),
        false,
    },
    &AESKeyDelivery::kDescriptorMethods,
    &descriptor_table_crypto_5fprotocol_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AESKeyDelivery::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 63, 2> AESKeyDelivery::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::crypto::AESKeyDelivery>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string encrypted_aes_key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AESKeyDelivery, _impl_.encrypted_aes_key_)}},
    // string encrypted_aes_iv = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(AESKeyDelivery, _impl_.encrypted_aes_iv_)}},
    // uint32 session_id = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AESKeyDelivery, _impl_.session_id_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(AESKeyDelivery, _impl_.session_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string encrypted_aes_key = 1;
    {PROTOBUF_FIELD_OFFSET(AESKeyDelivery, _impl_.encrypted_aes_key_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string encrypted_aes_iv = 2;
    {PROTOBUF_FIELD_OFFSET(AESKeyDelivery, _impl_.encrypted_aes_iv_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 session_id = 3;
    {PROTOBUF_FIELD_OFFSET(AESKeyDelivery, _impl_.session_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\25\21\20\0\0\0\0\0"
    "crypto.AESKeyDelivery"
    "encrypted_aes_key"
    "encrypted_aes_iv"
  }},
};

PROTOBUF_NOINLINE void AESKeyDelivery::Clear() {
// @@protoc_insertion_point(message_clear_start:crypto.AESKeyDelivery)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.encrypted_aes_key_.ClearToEmpty();
  _impl_.encrypted_aes_iv_.ClearToEmpty();
  _impl_.session_id_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AESKeyDelivery::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AESKeyDelivery& this_ = static_cast<const AESKeyDelivery&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AESKeyDelivery::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AESKeyDelivery& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:crypto.AESKeyDelivery)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string encrypted_aes_key = 1;
          if (!this_._internal_encrypted_aes_key().empty()) {
            const std::string& _s = this_._internal_encrypted_aes_key();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "crypto.AESKeyDelivery.encrypted_aes_key");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string encrypted_aes_iv = 2;
          if (!this_._internal_encrypted_aes_iv().empty()) {
            const std::string& _s = this_._internal_encrypted_aes_iv();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "crypto.AESKeyDelivery.encrypted_aes_iv");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // uint32 session_id = 3;
          if (this_._internal_session_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                3, this_._internal_session_id(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:crypto.AESKeyDelivery)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AESKeyDelivery::ByteSizeLong(const MessageLite& base) {
          const AESKeyDelivery& this_ = static_cast<const AESKeyDelivery&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AESKeyDelivery::ByteSizeLong() const {
          const AESKeyDelivery& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:crypto.AESKeyDelivery)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string encrypted_aes_key = 1;
            if (!this_._internal_encrypted_aes_key().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_encrypted_aes_key());
            }
            // string encrypted_aes_iv = 2;
            if (!this_._internal_encrypted_aes_iv().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_encrypted_aes_iv());
            }
            // uint32 session_id = 3;
            if (this_._internal_session_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_session_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AESKeyDelivery::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AESKeyDelivery*>(&to_msg);
  auto& from = static_cast<const AESKeyDelivery&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:crypto.AESKeyDelivery)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_encrypted_aes_key().empty()) {
    _this->_internal_set_encrypted_aes_key(from._internal_encrypted_aes_key());
  }
  if (!from._internal_encrypted_aes_iv().empty()) {
    _this->_internal_set_encrypted_aes_iv(from._internal_encrypted_aes_iv());
  }
  if (from._internal_session_id() != 0) {
    _this->_impl_.session_id_ = from._impl_.session_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AESKeyDelivery::CopyFrom(const AESKeyDelivery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:crypto.AESKeyDelivery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AESKeyDelivery::InternalSwap(AESKeyDelivery* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.encrypted_aes_key_, &other->_impl_.encrypted_aes_key_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.encrypted_aes_iv_, &other->_impl_.encrypted_aes_iv_, arena);
        swap(_impl_.session_id_, other->_impl_.session_id_);
}

::google::protobuf::Metadata AESKeyDelivery::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class HandshakeComplete::_Internal {
 public:
};

HandshakeComplete::HandshakeComplete(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:crypto.HandshakeComplete)
}
inline PROTOBUF_NDEBUG_INLINE HandshakeComplete::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::crypto::HandshakeComplete& from_msg)
      : status_(arena, from.status_),
        test_message_(arena, from.test_message_),
        _cached_size_{0} {}

HandshakeComplete::HandshakeComplete(
    ::google::protobuf::Arena* arena,
    const HandshakeComplete& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  HandshakeComplete* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.session_id_ = from._impl_.session_id_;

  // @@protoc_insertion_point(copy_constructor:crypto.HandshakeComplete)
}
inline PROTOBUF_NDEBUG_INLINE HandshakeComplete::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : status_(arena),
        test_message_(arena),
        _cached_size_{0} {}

inline void HandshakeComplete::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.session_id_ = {};
}
HandshakeComplete::~HandshakeComplete() {
  // @@protoc_insertion_point(destructor:crypto.HandshakeComplete)
  SharedDtor(*this);
}
inline void HandshakeComplete::SharedDtor(MessageLite& self) {
  HandshakeComplete& this_ = static_cast<HandshakeComplete&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.status_.Destroy();
  this_._impl_.test_message_.Destroy();
  this_._impl_.~Impl_();
}

inline void* HandshakeComplete::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) HandshakeComplete(arena);
}
constexpr auto HandshakeComplete::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(HandshakeComplete),
                                            alignof(HandshakeComplete));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull HandshakeComplete::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_HandshakeComplete_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &HandshakeComplete::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<HandshakeComplete>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &HandshakeComplete::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<HandshakeComplete>(), &HandshakeComplete::ByteSizeLong,
            &HandshakeComplete::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(HandshakeComplete, _impl_._cached_size_),
        false,
    },
    &HandshakeComplete::kDescriptorMethods,
    &descriptor_table_crypto_5fprotocol_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* HandshakeComplete::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 51, 2> HandshakeComplete::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::crypto::HandshakeComplete>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 session_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(HandshakeComplete, _impl_.session_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(HandshakeComplete, _impl_.session_id_)}},
    // string status = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(HandshakeComplete, _impl_.status_)}},
    // string test_message = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(HandshakeComplete, _impl_.test_message_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 session_id = 1;
    {PROTOBUF_FIELD_OFFSET(HandshakeComplete, _impl_.session_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string status = 2;
    {PROTOBUF_FIELD_OFFSET(HandshakeComplete, _impl_.status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string test_message = 3;
    {PROTOBUF_FIELD_OFFSET(HandshakeComplete, _impl_.test_message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\30\0\6\14\0\0\0\0"
    "crypto.HandshakeComplete"
    "status"
    "test_message"
  }},
};

PROTOBUF_NOINLINE void HandshakeComplete::Clear() {
// @@protoc_insertion_point(message_clear_start:crypto.HandshakeComplete)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.status_.ClearToEmpty();
  _impl_.test_message_.ClearToEmpty();
  _impl_.session_id_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* HandshakeComplete::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const HandshakeComplete& this_ = static_cast<const HandshakeComplete&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* HandshakeComplete::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const HandshakeComplete& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:crypto.HandshakeComplete)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 session_id = 1;
          if (this_._internal_session_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_session_id(), target);
          }

          // string status = 2;
          if (!this_._internal_status().empty()) {
            const std::string& _s = this_._internal_status();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "crypto.HandshakeComplete.status");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string test_message = 3;
          if (!this_._internal_test_message().empty()) {
            const std::string& _s = this_._internal_test_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "crypto.HandshakeComplete.test_message");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:crypto.HandshakeComplete)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t HandshakeComplete::ByteSizeLong(const MessageLite& base) {
          const HandshakeComplete& this_ = static_cast<const HandshakeComplete&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t HandshakeComplete::ByteSizeLong() const {
          const HandshakeComplete& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:crypto.HandshakeComplete)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string status = 2;
            if (!this_._internal_status().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_status());
            }
            // string test_message = 3;
            if (!this_._internal_test_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_test_message());
            }
            // uint32 session_id = 1;
            if (this_._internal_session_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_session_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void HandshakeComplete::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HandshakeComplete*>(&to_msg);
  auto& from = static_cast<const HandshakeComplete&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:crypto.HandshakeComplete)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_status().empty()) {
    _this->_internal_set_status(from._internal_status());
  }
  if (!from._internal_test_message().empty()) {
    _this->_internal_set_test_message(from._internal_test_message());
  }
  if (from._internal_session_id() != 0) {
    _this->_impl_.session_id_ = from._impl_.session_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HandshakeComplete::CopyFrom(const HandshakeComplete& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:crypto.HandshakeComplete)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HandshakeComplete::InternalSwap(HandshakeComplete* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.status_, &other->_impl_.status_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.test_message_, &other->_impl_.test_message_, arena);
        swap(_impl_.session_id_, other->_impl_.session_id_);
}

::google::protobuf::Metadata HandshakeComplete::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GameData::_Internal {
 public:
};

GameData::GameData(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:crypto.GameData)
}
inline PROTOBUF_NDEBUG_INLINE GameData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::crypto::GameData& from_msg)
      : payload_(arena, from.payload_),
        _cached_size_{0} {}

GameData::GameData(
    ::google::protobuf::Arena* arena,
    const GameData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GameData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, timestamp_),
           offsetof(Impl_, message_type_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::message_type_));

  // @@protoc_insertion_point(copy_constructor:crypto.GameData)
}
inline PROTOBUF_NDEBUG_INLINE GameData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : payload_(arena),
        _cached_size_{0} {}

inline void GameData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           0,
           offsetof(Impl_, message_type_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::message_type_));
}
GameData::~GameData() {
  // @@protoc_insertion_point(destructor:crypto.GameData)
  SharedDtor(*this);
}
inline void GameData::SharedDtor(MessageLite& self) {
  GameData& this_ = static_cast<GameData&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.payload_.Destroy();
  this_._impl_.~Impl_();
}

inline void* GameData::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GameData(arena);
}
constexpr auto GameData::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GameData),
                                            alignof(GameData));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GameData::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GameData_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GameData::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GameData>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GameData::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GameData>(), &GameData::ByteSizeLong,
            &GameData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GameData, _impl_._cached_size_),
        false,
    },
    &GameData::kDescriptorMethods,
    &descriptor_table_crypto_5fprotocol_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GameData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 31, 2> GameData::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::crypto::GameData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 message_type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GameData, _impl_.message_type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(GameData, _impl_.message_type_)}},
    // uint64 timestamp = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GameData, _impl_.timestamp_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(GameData, _impl_.timestamp_)}},
    // string payload = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(GameData, _impl_.payload_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 message_type = 1;
    {PROTOBUF_FIELD_OFFSET(GameData, _impl_.message_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint64 timestamp = 2;
    {PROTOBUF_FIELD_OFFSET(GameData, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string payload = 3;
    {PROTOBUF_FIELD_OFFSET(GameData, _impl_.payload_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\17\0\0\7\0\0\0\0"
    "crypto.GameData"
    "payload"
  }},
};

PROTOBUF_NOINLINE void GameData::Clear() {
// @@protoc_insertion_point(message_clear_start:crypto.GameData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.payload_.ClearToEmpty();
  ::memset(&_impl_.timestamp_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.message_type_) -
      reinterpret_cast<char*>(&_impl_.timestamp_)) + sizeof(_impl_.message_type_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GameData::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GameData& this_ = static_cast<const GameData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GameData::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GameData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:crypto.GameData)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 message_type = 1;
          if (this_._internal_message_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_message_type(), target);
          }

          // uint64 timestamp = 2;
          if (this_._internal_timestamp() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                2, this_._internal_timestamp(), target);
          }

          // string payload = 3;
          if (!this_._internal_payload().empty()) {
            const std::string& _s = this_._internal_payload();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "crypto.GameData.payload");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:crypto.GameData)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GameData::ByteSizeLong(const MessageLite& base) {
          const GameData& this_ = static_cast<const GameData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GameData::ByteSizeLong() const {
          const GameData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:crypto.GameData)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string payload = 3;
            if (!this_._internal_payload().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_payload());
            }
            // uint64 timestamp = 2;
            if (this_._internal_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_timestamp());
            }
            // uint32 message_type = 1;
            if (this_._internal_message_type() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_message_type());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GameData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GameData*>(&to_msg);
  auto& from = static_cast<const GameData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:crypto.GameData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_payload().empty()) {
    _this->_internal_set_payload(from._internal_payload());
  }
  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  if (from._internal_message_type() != 0) {
    _this->_impl_.message_type_ = from._impl_.message_type_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GameData::CopyFrom(const GameData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:crypto.GameData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GameData::InternalSwap(GameData* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.payload_, &other->_impl_.payload_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GameData, _impl_.message_type_)
      + sizeof(GameData::_impl_.message_type_)
      - PROTOBUF_FIELD_OFFSET(GameData, _impl_.timestamp_)>(
          reinterpret_cast<char*>(&_impl_.timestamp_),
          reinterpret_cast<char*>(&other->_impl_.timestamp_));
}

::google::protobuf::Metadata GameData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ChatMessage::_Internal {
 public:
};

ChatMessage::ChatMessage(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:crypto.ChatMessage)
}
inline PROTOBUF_NDEBUG_INLINE ChatMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::crypto::ChatMessage& from_msg)
      : username_(arena, from.username_),
        message_(arena, from.message_),
        _cached_size_{0} {}

ChatMessage::ChatMessage(
    ::google::protobuf::Arena* arena,
    const ChatMessage& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ChatMessage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, timestamp_),
           offsetof(Impl_, user_id_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::user_id_));

  // @@protoc_insertion_point(copy_constructor:crypto.ChatMessage)
}
inline PROTOBUF_NDEBUG_INLINE ChatMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : username_(arena),
        message_(arena),
        _cached_size_{0} {}

inline void ChatMessage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           0,
           offsetof(Impl_, user_id_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::user_id_));
}
ChatMessage::~ChatMessage() {
  // @@protoc_insertion_point(destructor:crypto.ChatMessage)
  SharedDtor(*this);
}
inline void ChatMessage::SharedDtor(MessageLite& self) {
  ChatMessage& this_ = static_cast<ChatMessage&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.username_.Destroy();
  this_._impl_.message_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ChatMessage::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ChatMessage(arena);
}
constexpr auto ChatMessage::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ChatMessage),
                                            alignof(ChatMessage));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ChatMessage::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ChatMessage_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ChatMessage::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ChatMessage>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ChatMessage::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ChatMessage>(), &ChatMessage::ByteSizeLong,
            &ChatMessage::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ChatMessage, _impl_._cached_size_),
        false,
    },
    &ChatMessage::kDescriptorMethods,
    &descriptor_table_crypto_5fprotocol_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ChatMessage::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 42, 2> ChatMessage::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::crypto::ChatMessage>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 timestamp = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ChatMessage, _impl_.timestamp_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(ChatMessage, _impl_.timestamp_)}},
    // uint32 user_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ChatMessage, _impl_.user_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ChatMessage, _impl_.user_id_)}},
    // string username = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ChatMessage, _impl_.username_)}},
    // string message = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(ChatMessage, _impl_.message_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 user_id = 1;
    {PROTOBUF_FIELD_OFFSET(ChatMessage, _impl_.user_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string username = 2;
    {PROTOBUF_FIELD_OFFSET(ChatMessage, _impl_.username_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string message = 3;
    {PROTOBUF_FIELD_OFFSET(ChatMessage, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 timestamp = 4;
    {PROTOBUF_FIELD_OFFSET(ChatMessage, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
    "\22\0\10\7\0\0\0\0"
    "crypto.ChatMessage"
    "username"
    "message"
  }},
};

PROTOBUF_NOINLINE void ChatMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:crypto.ChatMessage)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.username_.ClearToEmpty();
  _impl_.message_.ClearToEmpty();
  ::memset(&_impl_.timestamp_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.user_id_) -
      reinterpret_cast<char*>(&_impl_.timestamp_)) + sizeof(_impl_.user_id_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ChatMessage::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ChatMessage& this_ = static_cast<const ChatMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ChatMessage::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ChatMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:crypto.ChatMessage)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 user_id = 1;
          if (this_._internal_user_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_user_id(), target);
          }

          // string username = 2;
          if (!this_._internal_username().empty()) {
            const std::string& _s = this_._internal_username();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "crypto.ChatMessage.username");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string message = 3;
          if (!this_._internal_message().empty()) {
            const std::string& _s = this_._internal_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "crypto.ChatMessage.message");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // uint64 timestamp = 4;
          if (this_._internal_timestamp() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                4, this_._internal_timestamp(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:crypto.ChatMessage)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ChatMessage::ByteSizeLong(const MessageLite& base) {
          const ChatMessage& this_ = static_cast<const ChatMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ChatMessage::ByteSizeLong() const {
          const ChatMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:crypto.ChatMessage)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string username = 2;
            if (!this_._internal_username().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_username());
            }
            // string message = 3;
            if (!this_._internal_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_message());
            }
            // uint64 timestamp = 4;
            if (this_._internal_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_timestamp());
            }
            // uint32 user_id = 1;
            if (this_._internal_user_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_user_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ChatMessage::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ChatMessage*>(&to_msg);
  auto& from = static_cast<const ChatMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:crypto.ChatMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_username().empty()) {
    _this->_internal_set_username(from._internal_username());
  }
  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  if (from._internal_user_id() != 0) {
    _this->_impl_.user_id_ = from._impl_.user_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ChatMessage::CopyFrom(const ChatMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:crypto.ChatMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ChatMessage::InternalSwap(ChatMessage* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.username_, &other->_impl_.username_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ChatMessage, _impl_.user_id_)
      + sizeof(ChatMessage::_impl_.user_id_)
      - PROTOBUF_FIELD_OFFSET(ChatMessage, _impl_.timestamp_)>(
          reinterpret_cast<char*>(&_impl_.timestamp_),
          reinterpret_cast<char*>(&other->_impl_.timestamp_));
}

::google::protobuf::Metadata ChatMessage::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ServerResponse::_Internal {
 public:
};

ServerResponse::ServerResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:crypto.ServerResponse)
}
inline PROTOBUF_NDEBUG_INLINE ServerResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::crypto::ServerResponse& from_msg)
      : result_message_(arena, from.result_message_),
        data_(arena, from.data_),
        _cached_size_{0} {}

ServerResponse::ServerResponse(
    ::google::protobuf::Arena* arena,
    const ServerResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ServerResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, request_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, request_id_),
           offsetof(Impl_, result_code_) -
               offsetof(Impl_, request_id_) +
               sizeof(Impl_::result_code_));

  // @@protoc_insertion_point(copy_constructor:crypto.ServerResponse)
}
inline PROTOBUF_NDEBUG_INLINE ServerResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : result_message_(arena),
        data_(arena),
        _cached_size_{0} {}

inline void ServerResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, request_id_),
           0,
           offsetof(Impl_, result_code_) -
               offsetof(Impl_, request_id_) +
               sizeof(Impl_::result_code_));
}
ServerResponse::~ServerResponse() {
  // @@protoc_insertion_point(destructor:crypto.ServerResponse)
  SharedDtor(*this);
}
inline void ServerResponse::SharedDtor(MessageLite& self) {
  ServerResponse& this_ = static_cast<ServerResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.result_message_.Destroy();
  this_._impl_.data_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ServerResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ServerResponse(arena);
}
constexpr auto ServerResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ServerResponse),
                                            alignof(ServerResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ServerResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ServerResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ServerResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ServerResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ServerResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ServerResponse>(), &ServerResponse::ByteSizeLong,
            &ServerResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ServerResponse, _impl_._cached_size_),
        false,
    },
    &ServerResponse::kDescriptorMethods,
    &descriptor_table_crypto_5fprotocol_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ServerResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 48, 2> ServerResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::crypto::ServerResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string data = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(ServerResponse, _impl_.data_)}},
    // uint32 request_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ServerResponse, _impl_.request_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ServerResponse, _impl_.request_id_)}},
    // int32 result_code = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ServerResponse, _impl_.result_code_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ServerResponse, _impl_.result_code_)}},
    // string result_message = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(ServerResponse, _impl_.result_message_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 request_id = 1;
    {PROTOBUF_FIELD_OFFSET(ServerResponse, _impl_.request_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // int32 result_code = 2;
    {PROTOBUF_FIELD_OFFSET(ServerResponse, _impl_.result_code_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string result_message = 3;
    {PROTOBUF_FIELD_OFFSET(ServerResponse, _impl_.result_message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string data = 4;
    {PROTOBUF_FIELD_OFFSET(ServerResponse, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\25\0\0\16\4\0\0\0"
    "crypto.ServerResponse"
    "result_message"
    "data"
  }},
};

PROTOBUF_NOINLINE void ServerResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:crypto.ServerResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_message_.ClearToEmpty();
  _impl_.data_.ClearToEmpty();
  ::memset(&_impl_.request_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.result_code_) -
      reinterpret_cast<char*>(&_impl_.request_id_)) + sizeof(_impl_.result_code_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ServerResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ServerResponse& this_ = static_cast<const ServerResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ServerResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ServerResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:crypto.ServerResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 request_id = 1;
          if (this_._internal_request_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_request_id(), target);
          }

          // int32 result_code = 2;
          if (this_._internal_result_code() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_result_code(), target);
          }

          // string result_message = 3;
          if (!this_._internal_result_message().empty()) {
            const std::string& _s = this_._internal_result_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "crypto.ServerResponse.result_message");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string data = 4;
          if (!this_._internal_data().empty()) {
            const std::string& _s = this_._internal_data();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "crypto.ServerResponse.data");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:crypto.ServerResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ServerResponse::ByteSizeLong(const MessageLite& base) {
          const ServerResponse& this_ = static_cast<const ServerResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ServerResponse::ByteSizeLong() const {
          const ServerResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:crypto.ServerResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string result_message = 3;
            if (!this_._internal_result_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_result_message());
            }
            // string data = 4;
            if (!this_._internal_data().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_data());
            }
            // uint32 request_id = 1;
            if (this_._internal_request_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_request_id());
            }
            // int32 result_code = 2;
            if (this_._internal_result_code() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_result_code());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ServerResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ServerResponse*>(&to_msg);
  auto& from = static_cast<const ServerResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:crypto.ServerResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_result_message().empty()) {
    _this->_internal_set_result_message(from._internal_result_message());
  }
  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  if (from._internal_request_id() != 0) {
    _this->_impl_.request_id_ = from._impl_.request_id_;
  }
  if (from._internal_result_code() != 0) {
    _this->_impl_.result_code_ = from._impl_.result_code_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ServerResponse::CopyFrom(const ServerResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:crypto.ServerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ServerResponse::InternalSwap(ServerResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.result_message_, &other->_impl_.result_message_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ServerResponse, _impl_.result_code_)
      + sizeof(ServerResponse::_impl_.result_code_)
      - PROTOBUF_FIELD_OFFSET(ServerResponse, _impl_.request_id_)>(
          reinterpret_cast<char*>(&_impl_.request_id_),
          reinterpret_cast<char*>(&other->_impl_.request_id_));
}

::google::protobuf::Metadata ServerResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace crypto
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_crypto_5fprotocol_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
